/* DO NOT EDIT THIS FILE!  It is auto-generated from the option list in ./rsync.1.md! */

  rprintf(F,"--verbose, -v            increase verbosity\n");
  rprintf(F,"--info=FLAGS             fine-grained informational verbosity\n");
  rprintf(F,"--debug=FLAGS            fine-grained debug verbosity\n");
  rprintf(F,"--stderr=e|a|c           change stderr output mode (default: errors)\n");
  rprintf(F,"--quiet, -q              suppress non-error messages\n");
  rprintf(F,"--no-motd                suppress daemon-mode MOTD\n");
  rprintf(F,"--checksum, -c           skip based on checksum, not mod-time & size\n");
  rprintf(F,"--archive, -a            archive mode is -rlptgoD (no -A,-X,-U,-N,-H)\n");
  rprintf(F,"--no-OPTION              turn off an implied OPTION (e.g. --no-D)\n");
  rprintf(F,"--recursive, -r          recurse into directories\n");
  rprintf(F,"--relative, -R           use relative path names\n");
  rprintf(F,"--no-implied-dirs        don't send implied dirs with --relative\n");
  rprintf(F,"--backup, -b             make backups (see --suffix & --backup-dir)\n");
  rprintf(F,"--backup-dir=DIR         make backups into hierarchy based in DIR\n");
  rprintf(F,"--suffix=SUFFIX          backup suffix (default ~ w/o --backup-dir)\n");
  rprintf(F,"--update, -u             skip files that are newer on the receiver\n");
  rprintf(F,"--inplace                update destination files in-place\n");
  rprintf(F,"--append                 append data onto shorter files\n");
  rprintf(F,"--append-verify          --append w/old data in file checksum\n");
  rprintf(F,"--dirs, -d               transfer directories without recursing\n");
  rprintf(F,"--old-dirs, --old-d      works like --dirs when talking to old rsync\n");
  rprintf(F,"--mkpath                 create destination's missing path components\n");
  rprintf(F,"--links, -l              copy symlinks as symlinks\n");
  rprintf(F,"--copy-links, -L         transform symlink into referent file/dir\n");
  rprintf(F,"--copy-unsafe-links      only \"unsafe\" symlinks are transformed\n");
  rprintf(F,"--safe-links             ignore symlinks that point outside the tree\n");
  rprintf(F,"--munge-links            munge symlinks to make them safe & unusable\n");
  rprintf(F,"--copy-dirlinks, -k      transform symlink to dir into referent dir\n");
  rprintf(F,"--keep-dirlinks, -K      treat symlinked dir on receiver as dir\n");
  rprintf(F,"--hard-links, -H         preserve hard links\n");
  rprintf(F,"--perms, -p              preserve permissions\n");
  rprintf(F,"--executability, -E      preserve executability\n");
  rprintf(F,"--chmod=CHMOD            affect file and/or directory permissions\n");
  rprintf(F,"--acls, -A               preserve ACLs (implies --perms)\n");
  rprintf(F,"--xattrs, -X             preserve extended attributes\n");
  rprintf(F,"--owner, -o              preserve owner (super-user only)\n");
  rprintf(F,"--group, -g              preserve group\n");
  rprintf(F,"--devices                preserve device files (super-user only)\n");
  rprintf(F,"--copy-devices           copy device contents as a regular file\n");
  rprintf(F,"--write-devices          write to devices as files (implies --inplace)\n");
  rprintf(F,"--specials               preserve special files\n");
  rprintf(F,"-D                       same as --devices --specials\n");
  rprintf(F,"--times, -t              preserve modification times\n");
  rprintf(F,"--atimes, -U             preserve access (use) times\n");
  rprintf(F,"--open-noatime           avoid changing the atime on opened files\n");
  rprintf(F,"--crtimes, -N            preserve create times (newness)\n");
  rprintf(F,"--omit-dir-times, -O     omit directories from --times\n");
  rprintf(F,"--omit-link-times, -J    omit symlinks from --times\n");
  rprintf(F,"--super                  receiver attempts super-user activities\n");
  rprintf(F,"--fake-super             store/recover privileged attrs using xattrs\n");
  rprintf(F,"--sparse, -S             turn sequences of nulls into sparse blocks\n");
  rprintf(F,"--preallocate            allocate dest files before writing them\n");
  rprintf(F,"--dry-run, -n            perform a trial run with no changes made\n");
  rprintf(F,"--whole-file, -W         copy files whole (w/o delta-xfer algorithm)\n");
  rprintf(F,"--checksum-choice=STR    choose the checksum algorithm (aka --cc)\n");
  rprintf(F,"--one-file-system, -x    don't cross filesystem boundaries\n");
  rprintf(F,"--block-size=SIZE, -B    force a fixed checksum block-size\n");
  rprintf(F,"--rsh=COMMAND, -e        specify the remote shell to use\n");
  rprintf(F,"--rsync-path=PROGRAM     specify the rsync to run on remote machine\n");
  rprintf(F,"--existing               skip creating new files on receiver\n");
  rprintf(F,"--ignore-existing        skip updating files that exist on receiver\n");
  rprintf(F,"--remove-source-files    sender removes synchronized files (non-dir)\n");
  rprintf(F,"--del                    an alias for --delete-during\n");
  rprintf(F,"--delete                 delete extraneous files from dest dirs\n");
  rprintf(F,"--delete-before          receiver deletes before xfer, not during\n");
  rprintf(F,"--delete-during          receiver deletes during the transfer\n");
  rprintf(F,"--delete-delay           find deletions during, delete after\n");
  rprintf(F,"--delete-after           receiver deletes after transfer, not during\n");
  rprintf(F,"--delete-excluded        also delete excluded files from dest dirs\n");
  rprintf(F,"--ignore-missing-args    ignore missing source args without error\n");
  rprintf(F,"--delete-missing-args    delete missing source args from destination\n");
  rprintf(F,"--ignore-errors          delete even if there are I/O errors\n");
  rprintf(F,"--force                  force deletion of dirs even if not empty\n");
  rprintf(F,"--max-delete=NUM         don't delete more than NUM files\n");
  rprintf(F,"--max-size=SIZE          don't transfer any file larger than SIZE\n");
  rprintf(F,"--min-size=SIZE          don't transfer any file smaller than SIZE\n");
  rprintf(F,"--max-alloc=SIZE         change a limit relating to memory alloc\n");
  rprintf(F,"--partial                keep partially transferred files\n");
  rprintf(F,"--partial-dir=DIR        put a partially transferred file into DIR\n");
  rprintf(F,"--delay-updates          put all updated files into place at end\n");
  rprintf(F,"--prune-empty-dirs, -m   prune empty directory chains from file-list\n");
  rprintf(F,"--numeric-ids            don't map uid/gid values by user/group name\n");
  rprintf(F,"--usermap=STRING         custom username mapping\n");
  rprintf(F,"--groupmap=STRING        custom groupname mapping\n");
  rprintf(F,"--chown=USER:GROUP       simple username/groupname mapping\n");
  rprintf(F,"--timeout=SECONDS        set I/O timeout in seconds\n");
  rprintf(F,"--contimeout=SECONDS     set daemon connection timeout in seconds\n");
  rprintf(F,"--ignore-times, -I       don't skip files that match size and time\n");
  rprintf(F,"--size-only              skip files that match in size\n");
  rprintf(F,"--modify-window=NUM, -@  set the accuracy for mod-time comparisons\n");
  rprintf(F,"--temp-dir=DIR, -T       create temporary files in directory DIR\n");
  rprintf(F,"--fuzzy, -y              find similar file for basis if no dest file\n");
  rprintf(F,"--compare-dest=DIR       also compare destination files relative to DIR\n");
  rprintf(F,"--copy-dest=DIR          ... and include copies of unchanged files\n");
  rprintf(F,"--link-dest=DIR          hardlink to files in DIR when unchanged\n");
  rprintf(F,"--compress, -z           compress file data during the transfer\n");
  rprintf(F,"--compress-choice=STR    choose the compression algorithm (aka --zc)\n");
  rprintf(F,"--compress-level=NUM     explicitly set compression level (aka --zl)\n");
  rprintf(F,"--skip-compress=LIST     skip compressing files with suffix in LIST\n");
  rprintf(F,"--cvs-exclude, -C        auto-ignore files in the same way CVS does\n");
  rprintf(F,"--filter=RULE, -f        add a file-filtering RULE\n");
  rprintf(F,"-F                       same as --filter='dir-merge /.rsync-filter'\n");
  rprintf(F,"                         repeated: --filter='- .rsync-filter'\n");
  rprintf(F,"--exclude=PATTERN        exclude files matching PATTERN\n");
  rprintf(F,"--exclude-from=FILE      read exclude patterns from FILE\n");
  rprintf(F,"--include=PATTERN        don't exclude files matching PATTERN\n");
  rprintf(F,"--include-from=FILE      read include patterns from FILE\n");
  rprintf(F,"--files-from=FILE        read list of source-file names from FILE\n");
  rprintf(F,"--from0, -0              all *-from/filter files are delimited by 0s\n");
  rprintf(F,"--old-args               disable the modern arg-protection idiom\n");
  rprintf(F,"--secluded-args, -s      use the protocol to safely send the args\n");
  rprintf(F,"--trust-sender           trust the remote sender's file list\n");
  rprintf(F,"--copy-as=USER[:GROUP]   specify user & optional group for the copy\n");
  rprintf(F,"--address=ADDRESS        bind address for outgoing socket to daemon\n");
  rprintf(F,"--port=PORT              specify double-colon alternate port number\n");
  rprintf(F,"--sockopts=OPTIONS       specify custom TCP options\n");
  rprintf(F,"--blocking-io            use blocking I/O for the remote shell\n");
  rprintf(F,"--outbuf=N|L|B           set out buffering to None, Line, or Block\n");
  rprintf(F,"--stats                  give some file-transfer stats\n");
  rprintf(F,"--8-bit-output, -8       leave high-bit chars unescaped in output\n");
  rprintf(F,"--human-readable, -h     output numbers in a human-readable format\n");
  rprintf(F,"--progress               show progress during transfer\n");
  rprintf(F,"-P                       same as --partial --progress\n");
  rprintf(F,"--itemize-changes, -i    output a change-summary for all updates\n");
  rprintf(F,"--remote-option=OPT, -M  send OPTION to the remote side only\n");
  rprintf(F,"--out-format=FORMAT      output updates using the specified FORMAT\n");
  rprintf(F,"--log-file=FILE          log what we're doing to the specified FILE\n");
  rprintf(F,"--log-file-format=FMT    log updates using the specified FMT\n");
  rprintf(F,"--password-file=FILE     read daemon-access password from FILE\n");
  rprintf(F,"--early-input=FILE       use FILE for daemon's early exec input\n");
  rprintf(F,"--list-only              list the files instead of copying them\n");
  rprintf(F,"--bwlimit=RATE           limit socket I/O bandwidth\n");
  rprintf(F,"--stop-after=MINS        Stop rsync after MINS minutes have elapsed\n");
  rprintf(F,"--stop-at=y-m-dTh:m      Stop rsync at the specified point in time\n");
  rprintf(F,"--fsync                  fsync every written file\n");
  rprintf(F,"--write-batch=FILE       write a batched update to FILE\n");
  rprintf(F,"--only-write-batch=FILE  like --write-batch but w/o updating dest\n");
  rprintf(F,"--read-batch=FILE        read a batched update from FILE\n");
  rprintf(F,"--protocol=NUM           force an older protocol version to be used\n");
  rprintf(F,"--iconv=CONVERT_SPEC     request charset conversion of filenames\n");
  rprintf(F,"--checksum-seed=NUM      set block/file checksum seed (advanced)\n");
  rprintf(F,"--ipv4, -4               prefer IPv4\n");
  rprintf(F,"--ipv6, -6               prefer IPv6\n");
  rprintf(F,"--version, -V            print the version + other info and exit\n");
  rprintf(F,"--help, -h (*)           show this help (* -h is help only on its own)\n");
